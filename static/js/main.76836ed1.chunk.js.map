{"version":3,"sources":["Components/CreateNewPost.jsx","Components/Post.jsx","Components/ModifyPost.jsx","Components/DisplayAllPosts.jsx","App.js","reportWebVitals.js","index.js"],"names":["CreateNewPost","props","onSubmit","savePost","className","type","onChange","savePostTitleToState","placeholder","size","required","ref","getTitle","savePostContentToState","cols","rows","getContent","Post","title","content","editPost","id","deletePost","onClick","ModifyPost","defaultValue","updatePost","DisplayAllPosts","useState","setTitle","setContent","allPosts","setAllPosts","isCreateNewPost","setIsCreateNewPost","isModifyPost","setIsModifyPost","editPostId","setEditPostId","useRef","event","target","value","toggleCreateNewPost","toggleModifyPostComponent","console","log","modifiedPost","filter","eachPost","preventDefault","Date","now","current","post","find","updatedPost","map","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76836ed1.chunk.js","sourcesContent":["import React from 'react';\n\nconst CreateNewPost = props => {\n    return (\n        <>\n        <form onSubmit={props.savePost} className=\"newPostForm\">\n            <h1>Create New Post</h1>\n            <input \n            type=\"text\"\n            onChange={props.savePostTitleToState}\n            placeholder=\"title\" \n            size=\"39\" \n            required\n            ref = {props.getTitle}\n            />\n            <br />\n            <br />\n            <textarea\n            onChange={props.savePostContentToState}\n            placeholder=\"contents\" \n            cols=\"41\" \n            rows=\"8\" \n            required\n            ref={props.getContent}\n            ></textarea>\n            <br />\n            <br />\n            <button>Save Post</button>\n        </form>\n</>\n    );\n};\n\nexport default CreateNewPost;","import React from 'react';\n\nconst Post = ({title, content, editPost, id, deletePost}) => {\n    return (\n        <>\n        <section className=\"postSection\">\n            <h3 className=\"postTitle\">{title}</h3>\n            <p className=\"postContent\">{content}</p>\n            <div className=\"buttonsContainer\">\n            <button onClick={() => editPost(id)}>Edit</button>\n            <button onClick={() => deletePost(id)}>Delete</button>\n            </div>\n        </section>\n        </>\n    )\n}\n\nexport default Post;","import React from 'react';\n\nconst ModifyPost = props => {\n    return (\n        <>\n        <form>\n            <h1>Modify Post</h1>\n            <input \n            defaultValue = {props.title}\n            onChange = {props.savePostTitleToState}\n            type=\"text\" \n            placeholder=\"title\" \n            size=\"39\" \n             />\n            <br />\n            <br />\n            <textarea\n            defaultValue = {props.content}\n            onChange = {props.savePostContentToState}\n            placeholder=\"contents\" \n            cols=\"41\" \n            rows=\"8\" \n            required />\n            <br />\n            <br />\n            <button onClick = {props.updatePost}>Update Post</button>\n        </form>\n        </>\n    )\n}\n\nexport default ModifyPost;","import React, {useState, useRef} from 'react';\nimport CreateNewPost from './CreateNewPost';\nimport Post from \"./Post\"\nimport ModifyPost from './ModifyPost';\n\nconst DisplayAllPosts = () => {\n\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [allPosts, setAllPosts] = useState([]);\n    const [isCreateNewPost, setIsCreateNewPost] = useState(false);\n    const [isModifyPost, setIsModifyPost] = useState(false);\n    const [editPostId, setEditPostId] = useState(\"\");\n\n    // Initialize useRef\n    const getTitle = useRef();\n    const getContent = useRef();\n\n    const savePostTitleToState = event => {\n        setTitle(event.target.value);\n    };\n    \n    const savePostContentToState = event => {\n        setContent(event.target.value);\n    };\n\n    const toggleCreateNewPost = () => {\n        setIsCreateNewPost(!isCreateNewPost)\n    }\n\n    const toggleModifyPostComponent = () => {\n        setIsModifyPost(!isModifyPost)\n    }\n\n    const editPost = id => {\n        setEditPostId(id);\n        console.log(id)\n        toggleModifyPostComponent();\n    }\n\n    const deletePost = id => {\n        const modifiedPost = allPosts.filter(eachPost => {\n            return eachPost.id !== id;\n        })\n        setAllPosts(modifiedPost);\n    }\n\n    const savePost = event => {\n        event.preventDefault();\n        const id = Date.now();\n        setAllPosts([...allPosts, {title, content, id}]);\n        console.log(allPosts);\n        setTitle(\"\")\n        setContent(\"\")\n        getTitle.current.value = \"\";\n        getContent.current.value = \"\";\n        toggleCreateNewPost()\n    }\n\n    const updatePost = (event) => {\n        event.preventDefault();\n        const updatedPost = allPosts.map(eachPost => {\n            if (eachPost.id === editPostId) {\n                console.log([eachPost.id, editPostId])\n                return {\n                    ...eachPost,\n                    title: title || eachPost.title,\n                    content: content || eachPost.content\n                };\n            }\n            console.log(eachPost)\n            return eachPost;\n        });\n        setAllPosts(updatedPost);\n        toggleModifyPostComponent();\n    };\n\n    if(isCreateNewPost) {\n    return (\n        <>\n        <CreateNewPost \n        savePostTitleToState = {savePostTitleToState}\n        savePostContentToState = {savePostContentToState}\n        getTitle = {getTitle}\n        getContent = {getContent}\n        savePost = {savePost}\n        />\n        </>\n    )\n} else if (isModifyPost) {\n    const post = allPosts.find(post => {\n        return post.id === editPostId;\n    })\n    return (\n        <ModifyPost\n        title = {post.title}\n        content = {post.content}\n        updatePost = {updatePost}\n        savePostTitleToState = {savePostTitleToState}\n        savePostContentToState = {savePostContentToState}\n        />\n    );\n}\nreturn (\n    <>\n    <h2 className=\"mainTitle\">All Posts</h2>\n    {!allPosts.length ? (\n        <div>\n            <h3>There is nothing to see here!</h3>\n        </div>\n    ) : (\n        allPosts.map(eachPost => {\n            return (\n                <Post\n                id={eachPost.id}\n                key={eachPost.id}\n                title={eachPost.title}\n                content={eachPost.content}\n                editPost = {editPost}\n                deletePost = {deletePost} />\n            )\n        })\n    )}\n\n    <br />\n    <br />\n    <button onClick={toggleCreateNewPost}>Create New</button>\n    </>\n)\n};\n\nexport default DisplayAllPosts","import React from 'react';\nimport DisplayAllPosts from './Components/DisplayAllPosts';\nimport './App.css'\n\n\nconst App = () => {\n  return (\n    <>\n    <DisplayAllPosts />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}